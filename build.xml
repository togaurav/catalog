<project name="CatalogService" default="deploy" basedir=".">
   <description>
        simple example build file
    </description>
   <!-- set global properties for this build -->
   <property name="src" location="src/main/java" />
   <property name="test" location="src/test/java" />
   <property name="src.webapp" location="src/main/webapp" />

   <property name="conf" location="conf" />

   <property name="build" location="target/ant/build" />

   <property name="dir.javadoc" location="javadoc"/>
   <property name="build.war" location="${build}/war" />

   <property name="war.resources" location="src/main/resources"/>

   <property name="test.resources" location="src/test/resources"/>
	
	<property name="common.lib" location="../Common/build/Common/optimize/lib/Common.jar"/>

   <property name="dist" location="${build.war}" />

   <property name="server.webapps.dir" location="../../Server/webframework/webapps" />
   <property name="server.context.dir" location="../../Server/webframework/contexts" />

   <property name="server.services.dir" location="../extensions/system" />

   <property name="service" value="catalog-service" />
   <property name="service.context" value="${service}.xml" />

   <property environment="env" />

   <path id="project.class.path">
      <pathelement location="lib/" />
      <pathelement path="${java.class.path}/" />
      <pathelement location="${env.APP_HOME}/commons-httpclient-3.0.1/commons-httpclient-3.0.1.jar" />

      <!-- Mockito / Junit jar -->
      <pathelement location="${env.APP_HOME}/junit-4.8.2/junit-4.8.2.jar" />
      <pathelement location="${env.APP_HOME}/mockito-1.8.5/mockito-all-1.8.5.jar" />

      <!-- Protobuf jar -->
      <pathelement location="${env.APP_HOME}/protobuf-2.3.0/protobuf-java-2.3.0.jar" />

      <!-- Spring Framework jar's -->
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.core-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.js-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.jdbc-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.orm-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.transaction-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.web-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.context-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.test-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.context.support-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.web.servlet-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.beans-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.asm-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.aop-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.expression-3.0.4.RELEASE.jar" />
      <pathelement location="${env.APP_HOME}/spring-framework-3.0.4/dist/org.springframework.jms-3.0.4.RELEASE.jar" />

      <!-- JMS and ACTIVEMQ -->
      <pathelement location="${env.APP_HOME}/jms-1.1/lib/javax.jms.jar" />
      <pathelement location="${env.APP_HOME}/activemq-5.3.2/activemq-all-5.3.2.jar" />
      <pathelement location="${env.APP_HOME}/activemq-5.3.2/lib/activemq-core-5.3.2.jar" />
      <pathelement location="${env.APP_HOME}/activemq-5.3.2/lib/optional/activemq-pool-5.3.2.jar" />
      <pathelement location="${env.APP_HOME}/activemq-5.3.2/lib/optional/xbean-spring-3.6.jar" />
      <pathelement location="${env.APP_HOME}/activemq-5.3.2/lib/optional/org.osgi.core-4.1.0.jar" />
      <pathelement location="${env.APP_HOME}/commons-pool-1.5.5/commons-pool-1.5.5.jar" />

      <pathelement location="${env.APP_HOME}/spring-framework-2.0.3/lib/aopalliance/aopalliance.jar" />

      <pathelement location="${env.APP_HOME}/commons-codec-1.4/commons-codec-1.4.jar" />
      <pathelement location="${env.APP_HOME}/commons-lang-2.2/commons-lang-2.2.jar" />

      <!-- Hibernate jar's -->
      <pathelement location="${env.APP_HOME}/hibernate-3.6.0/lib/optional/c3p0/c3p0-0.9.1.jar" />
      <pathelement location="${env.APP_HOME}/hibernate-3.6.0/lib/required/jta-1.1.jar" />
      <pathelement location="${env.APP_HOME}/hibernate-3.6.0/lib/required/javassist-3.12.0.GA.jar" />
      <pathelement location="${env.APP_HOME}/hibernate-3.6.0/lib/required/commons-collections-3.1.jar" />
      <pathelement location="${env.APP_HOME}/hibernate-3.6.0/lib/required/dom4j-1.6.1.jar" />
      <pathelement location="${env.APP_HOME}/hibernate-3.6.0/lib/required/antlr-2.7.6.jar" />
      <pathelement location="${env.APP_HOME}/hibernate-3.6.0/lib/required/slf4j-api-1.6.1.jar" />
      <pathelement location="${env.APP_HOME}/hibernate-3.6.0/lib/jpa/hibernate-jpa-2.0-api-1.0.0.Final.jar" />
      <pathelement location="${env.APP_HOME}/hibernate-3.6.0/hibernate3.jar" />
   	
   	<pathelement location="${env.APP_HOME}/slf4j-1.6.1/slf4j-log4j12-1.6.1.jar" />

      <!-- Hibernate validator -->
      <pathelement location="${env.APP_HOME}/hibernate-validator-4.1.0/lib/validation-api-1.0.0.GA.jar" />
   	<pathelement location="${env.APP_HOME}/hibernate-validator-4.1.0/lib/log4j-1.2.14.jar" />
   	
      <pathelement location="${env.APP_HOME}/hibernate-validator-4.1.0/hibernate-validator-4.1.0.Final.jar" />

      <!-- MySQL Jar -->
      <pathelement location="${env.APP_HOME}/mysql-connector-java-5.1.6/mysql-connector-java-5.1.6-bin.jar" />

      <!-- Servlet API and Common Library -->
      <pathelement location="${env.APP_HOME}/jetty-6.1.21/lib/servlet-api-2.5-20081211.jar" />
      <pathelement location="${env.APP_HOME}/jetty-6.1.21/lib/jetty-6.1.21.jar" />
      <pathelement location="${env.APP_HOME}/jetty-6.1.21/lib/jetty-util-6.1.21.jar" />

      <pathelement location="${env.APP_HOME}/cglib-2.1_3/cglib-nodep-2.1_3.jar" />
   	<pathelement location="${common.lib}" />
      
      <!-- Experimental JCS cache - helps read only perf.-->
      <pathelement location="${war.resources}/jcs-1.3.jar" />

   </path>

   <path id="project.test.class.path">
      <path refid="project.class.path" />
      <pathelement location="${build}"/>
      <pathelement location="${build.war}/WEB-INF"/>
      <pathelement location="${test.resources}" />
      <pathelement location="${test.resources}/hsqldb-2.0.0.jar" />
      <pathelement location="${test.resources}/jcs-1.3.jar" />
   </path>

   <target name="test" depends="compile">
      <javac debug="true" srcdir="${test}" destdir="${build}" classpathref="project.test.class.path" />
      <junit fork="yes" haltonfailure="yes">
         <test name="com.c9a.unit.test.CatalogUtilsTest" />
         <formatter type="plain" usefile="false" />
         <classpath refid="project.test.class.path" />
      </junit>
   </target>

   <target name="init">
      <!-- Create the time stamp -->
      <tstamp />
      <!-- Create the build directory structure used by compile -->
      <mkdir dir="${build}" />
      <mkdir dir="${dist}" />
   </target>

   <target name="prep">
      <!-- Create the time stamp -->
      <tstamp />
      <!-- Create the build directory structure used by compile -->
      <mkdir dir="${build}" />
      <mkdir dir="${dist}" />
   </target>

   <target name="clean-compile" depends="war" description="Move the compiled war to the server directory for the build">
      <copy file="${dist}/war/${service}.war" tofile="${server.webapps.dir}/${service}.war" overwrite="true" />
      <copy file="${dist}/war/${service.context}" tofile="${server.context.dir}/${service.context}" overwrite="true" />
   </target>

   <target name="compile" depends="clean, init" description="compile the source ">
      <!-- Compile the java code from ${src} into ${build} -->
      
      <copy todir="${build}">
         <fileset dir="${src}">
            <exclude name="**/*.java" />
         </fileset>
      </copy>
      
      <javac debug="true" srcdir="${src}" destdir="${build}" classpathref="project.class.path" />
      <copy file="${conf}/${service.context}" tofile="${build}/${service.context}" overwrite="true" />
   </target>

   <target name="javadoc" depends="compile" description="Creates JavaDOCS">
      <javadoc classpathref="project.class.path" excludepackagenames="com.c9a.integration.test,com.c9a.buffers" access="public" destdir="${dir.javadoc}" author="true" version="true" use="true" windowtitle="Catalog Service API">
         <fileset dir="${src}" defaultexcludes="yes">
            <include name="**/*.java"/>
            <exclude name="com/c9a/integration/test/**/*.java" />
            <exclude name="com/c9a/buffers/**/*.java" />
         </fileset>
      </javadoc>
   </target>

   <target name="war" depends="compile" description="Creates a war package from current Structure">

      <copy todir="${build.war}">
         <fileset dir="${src.webapp}"/>
      </copy>

      <mkdir dir="${build.war}/WEB-INF/lib" />

      <mkdir dir="${build.war}/WEB-INF/classes" />

      <copy todir="${build.war}/WEB-INF/classes">
         <fileset dir="${war.resources}">
             <exclude name="**.cfg*"/>
         </fileset>
      </copy>
   	
      <jar jarfile="${build.war}/WEB-INF/lib/${service}.jar" basedir="${build}" />

      <copy todir="${build.war}/WEB-INF/lib" flatten="true">
         <path refid="project.class.path" />
      </copy>

      <mkdir dir="${dist}/war" />

      <jar jarfile="${dist}/war/${service}.war" basedir="${build.war}" />

      <copy file="${build}/${service.context}" tofile="${dist}/war/${service.context}" overwrite="true" />
   </target>

   <target name="deploy" depends="war" description="Move the compiled war to the server directory for the build">
      <copy file="${dist}/war/${service}.war" tofile="${server.webapps.dir}/${service}.war" overwrite="true" />
      <copy file="${dist}/war/${service.context}" tofile="${server.context.dir}/${service.context}" overwrite="true" />
   </target>

   <target name="undeploy">
      <delete file="${server.context.dir}/${service.context}" />
      <delete file="${server.webapps.dir}/${service}.war" />
   </target>

   <target name="clean" description="clean up">
      <!-- Delete the ${build} and ${dist} directory trees -->
      <delete dir="${build}" />
      <delete dir="${dir.javadoc}" />
   </target>
</project>
